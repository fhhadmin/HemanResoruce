{"remainingRequest":"D:\\Vue_WorkSpace\\sg-Admin\\node_modules\\babel-loader\\lib\\index.js!D:\\Vue_WorkSpace\\sg-Admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Vue_WorkSpace\\sg-Admin\\src\\components\\main-new\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\Vue_WorkSpace\\sg-Admin\\src\\components\\main-new\\main.vue","mtime":1551928428231},{"path":"D:\\Vue_WorkSpace\\sg-Admin\\.babelrc","mtime":1551258011000},{"path":"D:\\Vue_WorkSpace\\sg-Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551930361523},{"path":"D:\\Vue_WorkSpace\\sg-Admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1526583314000},{"path":"D:\\Vue_WorkSpace\\sg-Admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1526010763000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"D:\\\\Vue_WorkSpace\\\\sg-Admin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"D:\\\\Vue_WorkSpace\\\\sg-Admin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SideMenu from './components/side-menu';\nimport HeaderBar from './components/header-bar';\nimport TagsNav from './components/tags-nav';\nimport User from './components/user';\nimport ABackTop from './components/a-back-top';\nimport Fullscreen from './components/fullscreen'; // import Language from './components/language'\n// import ErrorStore from './components/error-store'\n\nimport { mapMutations, mapActions, mapGetters } from 'vuex';\nimport { getNewTagList, getNextRoute, routeEqual } from '@/libs/util';\nimport routers from '@/router/routers';\nimport minLogo from '@/assets/images/index_active.png';\nimport maxLogo from '@/assets/images/index_active.png';\nimport './main.less';\nexport default {\n  name: 'Main',\n  components: {\n    SideMenu: SideMenu,\n    HeaderBar: HeaderBar,\n    //    Language,\n    TagsNav: TagsNav,\n    Fullscreen: Fullscreen,\n    //    ErrorStore,\n    User: User,\n    ABackTop: ABackTop\n  },\n  data: function data() {\n    return {\n      collapsed: false,\n      minLogo: minLogo,\n      maxLogo: maxLogo,\n      isFullscreen: false\n    };\n  },\n  computed: {\n    //    ...mapGetters([\n    //      'errorCount'\n    //    ]),\n    tagNavList: function tagNavList() {\n      return this.$store.state.app.tagNavList;\n    },\n    tagRouter: function tagRouter() {\n      return this.$store.state.app.tagRouter;\n    },\n    userAvator: function userAvator() {\n      return this.$store.state.user.avatorImgPath;\n    },\n    cacheList: function cacheList() {\n      return ['ParentView'].concat(_toConsumableArray(this.tagNavList.length ? this.tagNavList.filter(function (item) {\n        return !(item.meta && item.meta.notCache);\n      }).map(function (item) {\n        return item.name;\n      }) : []));\n    },\n    menuList: function menuList() {\n      return this.$store.getters.menuList;\n    },\n    shopName: function shopName() {\n      return this.$store.state.user.shopName;\n    }\n  },\n  methods: _objectSpread({}, mapMutations(['setBreadCrumb', 'setTagNavList', 'addTag', //      'setLocal',\n  'setHomeRoute']), mapActions(['handleLogin']), {\n    turnToPage: function turnToPage(route) {\n      var _ref = {},\n          name = _ref.name,\n          params = _ref.params,\n          query = _ref.query;\n      console.log(route);\n      if (typeof route === 'string') name = route;else {\n        name = route.name;\n        params = route.params;\n        query = route.query;\n      }\n\n      if (name.indexOf('isTurnByHref_') > -1) {\n        window.open(name.split('_')[1]);\n        return;\n      }\n\n      this.$router.push({\n        name: name,\n        params: params,\n        query: query\n      });\n    },\n    handleCollapsedChange: function handleCollapsedChange(state) {\n      this.collapsed = state;\n    },\n    handleCloseTag: function handleCloseTag(res, type, route) {\n      if (type === 'all') {\n        this.turnToPage(this.$config.homeName);\n      } else if (routeEqual(this.$route, route)) {\n        if (type !== 'others') {\n          var nextRoute = getNextRoute(this.tagNavList, route);\n          this.$router.push(nextRoute);\n        }\n      }\n\n      this.setTagNavList(res);\n    },\n    handleClick: function handleClick(item) {\n      this.turnToPage(item);\n    }\n  }),\n  watch: {\n    '$route': function $route(newRoute) {\n      var name = newRoute.name,\n          query = newRoute.query,\n          params = newRoute.params,\n          meta = newRoute.meta;\n      this.addTag({\n        route: {\n          name: name,\n          query: query,\n          params: params,\n          meta: meta\n        },\n        type: 'push'\n      });\n      this.setBreadCrumb(newRoute);\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute));\n      this.$refs.sideMenu.updateOpenName(newRoute.name);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    /**\n     * @description 初始化设置面包屑导航和标签导航\n     */\n    this.setTagNavList();\n    this.setHomeRoute(routers);\n    this.addTag({\n      route: this.$store.state.app.homeRoute\n    });\n    this.setBreadCrumb(this.$route); // 设置初始语言\n    //    this.setLocal(this.$i18n.locale)\n    // 如果当前打开页面不在标签栏中，跳到homeName页\n\n    if (!this.tagNavList.find(function (item) {\n      return item.name === _this.$route.name;\n    })) {\n      this.$router.push({\n        name: this.$config.homeName\n      });\n    }\n  }\n};",{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA;AACA,kDACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AACA;AATA;wBAUA;;iBAEA;AACA;AACA;oBACA,AACA;AALA;AAMA;;AAEA;AACA;AACA;sCACA;mCACA;AACA;oCACA;mCACA;AACA;sCACA;oCACA;AACA;oCACA;;;;;WACA;AACA;kCACA;iCACA;AACA;kCACA;oCACA;AACA,AACA;AAtBA;AAuBA,2CAEA,iBACA,iBACA,UACA;AACA,AACA,gBANA,eAOA,CACA,AACA;;AACA,iBACA;;;;kBACA;4CACA,WACA;qBACA;uBACA;sBACA;AACA;;8CACA;oCACA;AACA;AACA;;;AAEA;AACA;AACA,AACA;AAJA;AAKA;iEACA;uBACA;AACA;8DACA;0BACA;qCACA;iDACA;+BACA;wDACA;4BACA;AACA;AACA;;yBACA;AACA;4CACA;sBACA;AACA,AACA;;;;AAEA,iBACA;;;;;;;;;AAEA;;cACA,AACA;AAHA;yBAIA;wDACA;kDACA;AACA,AACA;AAXA;;AAYA;;AACA,AACA,AACA;;;SACA;sBACA;;mCAEA,AACA;AAFA;4BAGA,SACA;AACA;AACA;;;;QACA;;2BAEA,AACA;AAFA;AAGA;AACA;AAzHA","file":"main.vue","sourceRoot":"src\\components\\main-new","sourcesContent":["<!--\n * @description:\n * @Author: 9thArts@LucasWang\n * @LastEditors: 9thArts@LucasWang\n * @Date: 2019-02-28\n * @LastEditTime: 2019-02-28\n -->\n<template>\n  <Layout style=\"height: 100%\" class=\"main\">\n    <Sider hide-trigger collapsible :width=\"256\" :collapsed-width=\"64\" v-model=\"collapsed\" class=\"left-sider\" :style=\"{overflow: 'hidden'}\">\n      <side-menu accordion ref=\"sideMenu\" :active-name=\"$route.name\" :collapsed=\"collapsed\" @on-select=\"turnToPage\" :menu-list=\"menuList\">\n        <!-- 需要放在菜单上面的内容，如Logo，写在side-menu标签内部，如下 -->\n        <div class=\"logo-con\">\n          <div v-show=\"!collapsed\">\n            <img :src=\"maxLogo\" style=\"display:inline-block\"/>\n            <!-- <h2 style=\"display:inline-block\">正元管理后台</h2> -->\n          </div>\n          <img v-show=\"collapsed\" :src=\"minLogo\" key=\"min-logo\" />\n        </div>\n        <!-- 显示店名 -->\n        <div class=\"shopName\" v-show=\"!collapsed\">\n          {{ shopName }}\n        </div>\n      </side-menu>\n    </Sider>\n    <Layout>\n      <Header class=\"header-con\">\n        <header-bar :collapsed=\"collapsed\" @on-coll-change=\"handleCollapsedChange\">\n          <!--<user :message-unread-count=\"unreadCount\" :user-avator=\"userAvator\"/>-->\n          <user :user-avator=\"userAvator\"/>\n          <!--<language v-if=\"$config.useI18n\" @on-lang-change=\"setLocal\" style=\"margin-right: 10px;\" :lang=\"local\"/>-->\n          <!--<error-store v-if=\"$config.plugin['error-store'] && $config.plugin['error-store'].showInHeader\" :has-read=\"hasReadErrorPage\" :count=\"errorCount\"></error-store>-->\n          <fullscreen v-model=\"isFullscreen\" style=\"margin-right: 10px;\"/>\n        </header-bar>\n      </Header>\n      <Content class=\"main-content-con\">\n        <Layout class=\"main-layout-con\">\n          <div class=\"tag-nav-wrapper\">\n            <tags-nav :value=\"$route\" @input=\"handleClick\" :list=\"tagNavList\" @on-close=\"handleCloseTag\"/>\n          </div>\n          <Content class=\"content-wrapper\">\n            <keep-alive :include=\"cacheList\">\n              <router-view/>\n            </keep-alive>\n            <ABackTop :height=\"100\" :bottom=\"80\" :right=\"50\" container=\".content-wrapper\"></ABackTop>\n          </Content>\n        </Layout>\n      </Content>\n    </Layout>\n  </Layout>\n</template>\n<script>\nimport SideMenu from './components/side-menu'\nimport HeaderBar from './components/header-bar'\nimport TagsNav from './components/tags-nav'\nimport User from './components/user'\nimport ABackTop from './components/a-back-top'\nimport Fullscreen from './components/fullscreen'\n// import Language from './components/language'\n// import ErrorStore from './components/error-store'\nimport { mapMutations, mapActions, mapGetters } from 'vuex'\nimport { getNewTagList, getNextRoute, routeEqual } from '@/libs/util'\nimport routers from '@/router/routers'\nimport minLogo from '@/assets/images/index_active.png'\nimport maxLogo from '@/assets/images/index_active.png'\nimport './main.less'\nexport default {\n  name: 'Main',\n  components: {\n    SideMenu,\n    HeaderBar,\n    //    Language,\n    TagsNav,\n    Fullscreen,\n    //    ErrorStore,\n    User,\n    ABackTop\n  },\n  data () {\n    return {\n      collapsed: false,\n      minLogo,\n      maxLogo,\n      isFullscreen: false\n    }\n  },\n  computed: {\n    //    ...mapGetters([\n    //      'errorCount'\n    //    ]),\n    tagNavList () {\n      return this.$store.state.app.tagNavList\n    },\n    tagRouter () {\n      return this.$store.state.app.tagRouter\n    },\n    userAvator () {\n      return this.$store.state.user.avatorImgPath\n    },\n    cacheList () {\n      return ['ParentView', ...this.tagNavList.length ? this.tagNavList.filter(item => !(item.meta && item.meta.notCache)).map(item => item.name) : []]\n    },\n    menuList () {\n      return this.$store.getters.menuList\n    },\n    shopName () {\n      return this.$store.state.user.shopName\n    }\n  },\n  methods: {\n    ...mapMutations([\n      'setBreadCrumb',\n      'setTagNavList',\n      'addTag',\n      //      'setLocal',\n      'setHomeRoute'\n    ]),\n    ...mapActions([\n      'handleLogin'\n    ]),\n    turnToPage (route) {\n      let { name, params, query } = {}\n      console.log(route)\n      if (typeof route === 'string') name = route\n      else {\n        name = route.name\n        params = route.params\n        query = route.query\n      }\n      if (name.indexOf('isTurnByHref_') > -1) {\n        window.open(name.split('_')[1])\n        return\n      }\n      this.$router.push({\n        name,\n        params,\n        query\n      })\n    },\n    handleCollapsedChange (state) {\n      this.collapsed = state\n    },\n    handleCloseTag (res, type, route) {\n      if (type === 'all') {\n        this.turnToPage(this.$config.homeName)\n      } else if (routeEqual(this.$route, route)) {\n        if (type !== 'others') {\n          const nextRoute = getNextRoute(this.tagNavList, route)\n          this.$router.push(nextRoute)\n        }\n      }\n      this.setTagNavList(res)\n    },\n    handleClick (item) {\n      this.turnToPage(item)\n    }\n  },\n  watch: {\n    '$route' (newRoute) {\n      const { name, query, params, meta } = newRoute\n      this.addTag({\n        route: { name, query, params, meta },\n        type: 'push'\n      })\n      this.setBreadCrumb(newRoute)\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute))\n      this.$refs.sideMenu.updateOpenName(newRoute.name)\n    }\n  },\n  mounted () {\n    /**\n     * @description 初始化设置面包屑导航和标签导航\n     */\n    this.setTagNavList()\n    this.setHomeRoute(routers)\n    this.addTag({\n      route: this.$store.state.app.homeRoute\n    })\n    this.setBreadCrumb(this.$route)\n    // 设置初始语言\n    //    this.setLocal(this.$i18n.locale)\n    // 如果当前打开页面不在标签栏中，跳到homeName页\n    if (!this.tagNavList.find(item => item.name === this.$route.name)) {\n      this.$router.push({\n        name: this.$config.homeName\n      })\n    }\n  }\n}\n</script>\n<style>\n  .shopName{\n    color: #eeeeee;\n    font-size: 20px;\n    padding: 10px 12px;\n    text-align: center;\n    box-sizing: border-box;\n    word-break: break-all;\n    word-wrap: break-word;\n    margin-top: 5px;\n  }\n</style>\n"]}]}