{"remainingRequest":"D:\\Vue_WorkSpace\\lzdx\\hr-Admin\\HemanResoruce\\node_modules\\babel-loader\\lib\\index.js!D:\\Vue_WorkSpace\\lzdx\\hr-Admin\\HemanResoruce\\src\\libs\\axios.js","dependencies":[{"path":"D:\\Vue_WorkSpace\\lzdx\\hr-Admin\\HemanResoruce\\src\\libs\\axios.js","mtime":1553761591361},{"path":"D:\\Vue_WorkSpace\\lzdx\\hr-Admin\\HemanResoruce\\.babelrc","mtime":1551258011000},{"path":"D:\\Vue_WorkSpace\\lzdx\\hr-Admin\\HemanResoruce\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551930361523},{"path":"D:\\Vue_WorkSpace\\lzdx\\hr-Admin\\HemanResoruce\\node_modules\\babel-loader\\lib\\index.js","mtime":1526583314000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport _classCallCheck from \"D:\\\\Vue_WorkSpace\\\\lzdx\\\\hr-Admin\\\\HemanResoruce\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"D:\\\\Vue_WorkSpace\\\\lzdx\\\\hr-Admin\\\\HemanResoruce\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/createClass\";\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\nimport { setToken } from './util';\n\nvar HttpRequest =\n/*#__PURE__*/\nfunction () {\n  function HttpRequest() {\n    var baseUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : baseURL;\n\n    _classCallCheck(this, HttpRequest);\n\n    this.baseUrl = baseUrl;\n    this.queue = {};\n  }\n\n  _createClass(HttpRequest, [{\n    key: \"getInsideConfig\",\n    value: function getInsideConfig() {\n      var config = {\n        baseURL: this.baseUrl,\n        headers: {//\n        }\n      };\n      return config;\n    }\n  }, {\n    key: \"distroy\",\n    value: function distroy(url) {\n      delete this.queue[url];\n\n      if (!Object.keys(this.queue).length) {// Spin.hide()\n      }\n    }\n  }, {\n    key: \"interceptors\",\n    value: function interceptors(instance, url) {\n      var _this = this;\n\n      // 请求拦截\n      instance.interceptors.request.use(function (config) {\n        // 添加全局的loading...\n        if (!Object.keys(_this.queue).length) {// Spin.show() // 不建议开启，因为界面不友好\n        }\n\n        _this.queue[url] = true;\n        return config;\n      }, function (error) {\n        return Promise.reject(error);\n      }); // 响应拦截\n\n      instance.interceptors.response.use(function (res) {\n        _this.distroy(url); // const { data } = res\n        // 判断响应状态\n        // 登陆过期\n\n\n        if (res.data.status + '' === '2') {\n          setToken('');\n          return Promise.reject(res.data);\n        } // 错误状态\n\n\n        if (res.data.status + '' === '500') {\n          return Promise.reject(res.data.info);\n        }\n\n        return res.data;\n      }, function (error) {\n        _this.distroy(url);\n\n        return Promise.reject(error);\n      });\n    } // 封装请求\n\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      var instance = axios.create();\n      options = Object.assign(this.getInsideConfig(), options);\n      this.interceptors(instance, options.url);\n      return instance(options);\n    }\n  }]);\n\n  return HttpRequest;\n}();\n\nexport default HttpRequest;",{"version":3,"sources":["src\\libs\\axios.js"],"names":["axios","defaults","withCredentials","setToken","HttpRequest","baseUrl","baseURL","queue","config","headers","url","Object","keys","length","instance","interceptors","request","use","Promise","reject","error","response","distroy","res","data","status","info","options","create","assign","getInsideConfig"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,MAAMC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,SAASC,QAAT,QAAyB,QAAzB;;IAEMC,W;;;AACJ,yBAAgC;AAAA,QAAnBC,OAAmB,uEAATC,OAAS;;AAAA;;AAC9B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKE,KAAL,GAAa,EAAb;AACD;;;;sCACkB;AACjB,UAAMC,SAAS;AACbF,iBAAS,KAAKD,OADD;AAEbI,iBAAS,CACP;AADO;AAFI,OAAf;AAMA,aAAOD,MAAP;AACD;;;4BACQE,G,EAAK;AACZ,aAAO,KAAKH,KAAL,CAAWG,GAAX,CAAP;;AACA,UAAI,CAACC,OAAOC,IAAP,CAAY,KAAKL,KAAjB,EAAwBM,MAA7B,EAAqC,CACnC;AACD;AACF;;;iCACaC,Q,EAAUJ,G,EAAK;AAAA;;AAC3B;AACAI,eAASC,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,kBAAU;AAC1C;AACA,YAAI,CAACN,OAAOC,IAAP,CAAY,MAAKL,KAAjB,EAAwBM,MAA7B,EAAqC,CACnC;AACD;;AACD,cAAKN,KAAL,CAAWG,GAAX,IAAkB,IAAlB;AACA,eAAOF,MAAP;AACD,OAPD,EAOG,iBAAS;AACV,eAAOU,QAAQC,MAAR,CAAeC,KAAf,CAAP;AACD,OATD,EAF2B,CAY3B;;AACAN,eAASC,YAAT,CAAsBM,QAAtB,CAA+BJ,GAA/B,CAAmC,eAAO;AACxC,cAAKK,OAAL,CAAaZ,GAAb,EADwC,CAExC;AACA;AACA;;;AACA,YAAIa,IAAIC,IAAJ,CAASC,MAAT,GAAkB,EAAlB,KAAyB,GAA7B,EAAkC;AAChCtB,mBAAS,EAAT;AACA,iBAAOe,QAAQC,MAAR,CAAeI,IAAIC,IAAnB,CAAP;AACD,SARuC,CASxC;;;AACA,YAAID,IAAIC,IAAJ,CAASC,MAAT,GAAkB,EAAlB,KAAyB,KAA7B,EAAoC;AAClC,iBAAOP,QAAQC,MAAR,CAAeI,IAAIC,IAAJ,CAASE,IAAxB,CAAP;AACD;;AACD,eAAOH,IAAIC,IAAX;AACD,OAdD,EAcG,iBAAS;AACV,cAAKF,OAAL,CAAaZ,GAAb;;AACA,eAAOQ,QAAQC,MAAR,CAAeC,KAAf,CAAP;AACD,OAjBD;AAkBD,K,CACD;;;;4BACSO,O,EAAS;AAChB,UAAMb,WAAWd,MAAM4B,MAAN,EAAjB;AACAD,gBAAUhB,OAAOkB,MAAP,CAAc,KAAKC,eAAL,EAAd,EAAsCH,OAAtC,CAAV;AACA,WAAKZ,YAAL,CAAkBD,QAAlB,EAA4Ba,QAAQjB,GAApC;AACA,aAAOI,SAASa,OAAT,CAAP;AACD;;;;;;AAEH,eAAevB,WAAf","sourceRoot":"D:\\Vue_WorkSpace\\lzdx\\hr-Admin\\HemanResoruce","sourcesContent":["import axios from 'axios'\naxios.defaults.withCredentials = true\nimport { setToken } from './util'\n\nclass HttpRequest {\n  constructor (baseUrl = baseURL) {\n    this.baseUrl = baseUrl\n    this.queue = {}\n  }\n  getInsideConfig () {\n    const config = {\n      baseURL: this.baseUrl,\n      headers: {\n        //\n      }\n    }\n    return config\n  }\n  distroy (url) {\n    delete this.queue[url]\n    if (!Object.keys(this.queue).length) {\n      // Spin.hide()\n    }\n  }\n  interceptors (instance, url) {\n    // 请求拦截\n    instance.interceptors.request.use(config => {\n      // 添加全局的loading...\n      if (!Object.keys(this.queue).length) {\n        // Spin.show() // 不建议开启，因为界面不友好\n      }\n      this.queue[url] = true\n      return config\n    }, error => {\n      return Promise.reject(error)\n    })\n    // 响应拦截\n    instance.interceptors.response.use(res => {\n      this.distroy(url)\n      // const { data } = res\n      // 判断响应状态\n      // 登陆过期\n      if (res.data.status + '' === '2') {\n        setToken('')\n        return Promise.reject(res.data)\n      }\n      // 错误状态\n      if (res.data.status + '' === '500') {\n        return Promise.reject(res.data.info)\n      }\n      return res.data\n    }, error => {\n      this.distroy(url)\n      return Promise.reject(error)\n    })\n  }\n  // 封装请求\n  request (options) {\n    const instance = axios.create()\n    options = Object.assign(this.getInsideConfig(), options)\n    this.interceptors(instance, options.url)\n    return instance(options)\n  }\n}\nexport default HttpRequest\n"]}]}