{"remainingRequest":"D:\\Vue_WorkSpace\\sg-Admin\\node_modules\\babel-loader\\lib\\index.js!D:\\Vue_WorkSpace\\sg-Admin\\src\\libs\\util.js","dependencies":[{"path":"D:\\Vue_WorkSpace\\sg-Admin\\src\\libs\\util.js","mtime":1552359819947},{"path":"D:\\Vue_WorkSpace\\sg-Admin\\.babelrc","mtime":1551258011000},{"path":"D:\\Vue_WorkSpace\\sg-Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551930361523},{"path":"D:\\Vue_WorkSpace\\sg-Admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1526583314000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _toConsumableArray from \"D:\\\\Vue_WorkSpace\\\\sg-Admin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport _objectSpread from \"D:\\\\Vue_WorkSpace\\\\sg-Admin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\nimport Cookies from 'js-cookie'; // cookie保存的天数\n\nimport config from '@/config';\nimport { forEach, hasOneOf, objEqual } from '@/libs/tools';\nvar title = config.title,\n    cookieExpires = config.cookieExpires,\n    useI18n = config.useI18n;\nexport var TOKEN_KEY = 'token_zhihuiminggong';\nexport var setToken = function setToken(token) {\n  Cookies.set(TOKEN_KEY, token, {\n    expires: cookieExpires || 1\n  });\n};\nexport var getToken = function getToken() {\n  var token = Cookies.get(TOKEN_KEY);\n  if (token) return token;else return false;\n};\nexport var hasChild = function hasChild(item) {\n  return item.children && item.children.length !== 0;\n};\n\nvar showThisMenuEle = function showThisMenuEle(item, access) {\n  if (item.meta && item.meta.access && item.meta.access.length) {\n    if (hasOneOf(item.meta.access, access)) return true;else return false;\n  } else return true;\n};\n/**\n * 打印方法\n * @param {String} divId 打印容器id\n */\n\n\nexport var printpage = function printpage(divId) {\n  var printHtml = document.getElementById(divId).innerHTML;\n  var wind = window.open('', 'newwindow', 'height=300, width=1000, top=100, left=300, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no');\n  wind.document.body.innerHTML = printHtml;\n  wind.print();\n  return false;\n};\n/**\n * 根据class名打印\n * @param { String } name  div的class名\n */\n\nexport var printClassPage = function printClassPage(name) {\n  var printHtml = document.getElementsByClassName(name)[0].innerHTML + document.getElementsByClassName(name)[1].innerHTML;\n  var wind = window.open('', 'newwindow', 'height=300, width=1000, top=100, left=300, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no');\n  wind.document.body.innerHTML = printHtml;\n  wind.print();\n  return false;\n};\n/**\n * @param {Array} list 通过路由列表得到菜单列表\n * @returns {Array}\n */\n\nexport var getMenuByRouter = function getMenuByRouter(list, access) {\n  var res = [];\n  forEach(list, function (item) {\n    if (!item.meta || item.meta && !item.meta.hideInMenu) {\n      var obj = {\n        icon: item.meta && item.meta.icon || '',\n        name: item.name,\n        meta: item.meta\n      };\n\n      if ((hasChild(item) || item.meta && item.meta.showAlways) && showThisMenuEle(item, access)) {\n        obj.children = getMenuByRouter(item.children, access);\n      }\n\n      if (item.meta && item.meta.href) obj.href = item.meta.href;\n      if (showThisMenuEle(item, access)) res.push(obj);\n    }\n  });\n  return res;\n};\n/**\n * @param {Array} routeMetched 当前路由metched\n * @returns {Array}\n */\n\nexport var getBreadCrumbList = function getBreadCrumbList(route, homeRoute) {\n  var homeItem = _objectSpread({}, homeRoute, {\n    icon: homeRoute.meta.icon\n  });\n\n  var routeMetched = route.matched;\n  if (routeMetched.some(function (item) {\n    return item.name === homeRoute.name;\n  })) return [homeItem];\n  var res = routeMetched.filter(function (item) {\n    return item.meta === undefined || !item.meta.hideInBread;\n  }).map(function (item) {\n    var meta = _objectSpread({}, item.meta);\n\n    if (meta.title && typeof meta.title === 'function') {\n      meta.__titleIsFunction__ = true;\n      meta.title = meta.title(route);\n    }\n\n    var obj = {\n      icon: item.meta && item.meta.icon || '',\n      name: item.name,\n      meta: meta\n    };\n    return obj;\n  });\n  res = res.filter(function (item) {\n    return !item.meta.hideInMenu;\n  });\n  return [_objectSpread({}, homeItem, {\n    to: homeRoute.path\n  })].concat(_toConsumableArray(res));\n};\nexport var showTitle = function showTitle(item, vm) {\n  var _item$meta = item.meta,\n      title = _item$meta.title,\n      __titleIsFunction__ = _item$meta.__titleIsFunction__;\n  if (!title) return;\n\n  if (useI18n) {\n    if (title.includes('{{') && title.includes('}}') && useI18n) title = title.replace(/({{[\\s\\S]+?}})/, function (m, str) {\n      return str.replace(/{{([\\s\\S]*)}}/, function (m, _) {\n        return vm.$t(_.trim());\n      });\n    });else if (__titleIsFunction__) title = item.meta.title;else title = vm.$t(item.name);\n  } else title = item.meta && item.meta.title || item.name;\n\n  return title;\n};\n/**\n * @description 本地存储和获取标签导航列表\n */\n\nexport var setTagNavListInLocalstorage = function setTagNavListInLocalstorage(list) {\n  localStorage.tagNaveList = JSON.stringify(list);\n};\n/**\n * @returns {Array} 其中的每个元素只包含路由原信息中的name, path, meta三项\n */\n\nexport var getTagNavListFromLocalstorage = function getTagNavListFromLocalstorage() {\n  var list = localStorage.tagNaveList;\n  return list ? JSON.parse(list) : [];\n};\n/**\n * @param {Array} routers 路由列表数组\n * @description 用于找到路由列表中name为home的对象\n */\n\nexport var getHomeRoute = function getHomeRoute(routers) {\n  var homeName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'home';\n  var i = -1;\n  var len = routers.length;\n  var homeRoute = {};\n\n  while (++i < len) {\n    var item = routers[i];\n\n    if (item.children && item.children.length) {\n      var res = getHomeRoute(item.children, homeName);\n      if (res.name) return res;\n    } else {\n      if (item.name === homeName) homeRoute = item;\n    }\n  }\n\n  return homeRoute;\n};\n/**\n * @param {Array} list 标签列表\n * @param {String} name 当前关闭的标签的name\n */\n\nexport var getNextRoute = function getNextRoute(list, route) {\n  var res = {};\n\n  if (list.length === 2) {\n    res = getHomeRoute(list);\n  } else {\n    var index = list.findIndex(function (item) {\n      return routeEqual(item, route);\n    });\n    if (index === list.length - 1) res = list[list.length - 2];else res = list[index + 1];\n  }\n\n  return res;\n};\n/**\n * 判断打开的标签列表里是否已存在这个新添加的路由对象\n */\n\nexport var routeHasExist = function routeHasExist(tagNavList, routeItem) {\n  var len = tagNavList.length;\n  var res = false;\n  doCustomTimes(len, function (index) {\n    if (routeEqual(tagNavList[index], routeItem)) res = true;\n  });\n  return res;\n};\n/**\n * @description 根据name/params/query判断两个路由对象是否相等\n * @param {*} route1 路由对象\n * @param {*} route2 路由对象\n */\n\nexport var routeEqual = function routeEqual(route1, route2) {\n  var params1 = route1.params || {};\n  var params2 = route2.params || {};\n  var query1 = route1.query || {};\n  var query2 = route2.query || {};\n  return route1.name === route2.name && objEqual(params1, params2) && objEqual(query1, query2);\n};\n/**\n * @param {Number} times 回调函数需要执行的次数\n * @param {Function} callback 回调函数\n */\n\nexport var doCustomTimes = function doCustomTimes(times, callback) {\n  var i = -1;\n\n  while (++i < times) {\n    callback(i);\n  }\n};\nexport var getRouteTitleHandled = function getRouteTitleHandled(route) {\n  var router = _objectSpread({}, route);\n\n  var meta = _objectSpread({}, route.meta);\n\n  var title = '';\n\n  if (meta.title) {\n    if (typeof meta.title === 'function') {\n      meta.__titleIsFunction__ = true;\n      title = meta.title(router);\n    } else title = meta.title;\n  }\n\n  meta.title = title;\n  router.meta = meta;\n  return router;\n};\n/**\n * @description 根据当前跳转的路由设置显示在浏览器标签的title\n * @param {Object} routeItem 路由对象\n * @param {Object} vm Vue实例\n */\n\nexport var setTitle = function setTitle(routeItem, vm) {\n  var handledRoute = getRouteTitleHandled(routeItem);\n  var pageTitle = showTitle(handledRoute, vm);\n  var resTitle = pageTitle ? \"\".concat(title, \" - \").concat(pageTitle) : title;\n  window.document.title = resTitle;\n};\nexport var localSave = function localSave(key, value) {\n  localStorage.setItem(key, value);\n};\nexport var localRead = function localRead(key) {\n  return localStorage.getItem(key) || '';\n};\nexport var findNodeUpperByClasses = function findNodeUpperByClasses(ele, classes) {\n  var parentNode = ele.parentNode;\n\n  if (parentNode) {\n    var classList = parentNode.classList;\n\n    if (classList && classes.every(function (className) {\n      return classList.contains(className);\n    })) {\n      return parentNode;\n    } else {\n      return findNodeUpperByClasses(parentNode, classes);\n    }\n  }\n}; // scrollTop animation\n\nexport var scrollTop = function scrollTop(el) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var to = arguments.length > 2 ? arguments[2] : undefined;\n  var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 500;\n  var endCallback = arguments.length > 4 ? arguments[4] : undefined;\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }\n\n  var difference = Math.abs(from - to);\n  var step = Math.ceil(difference / duration * 50);\n\n  var scroll = function scroll(start, end, step) {\n    if (start === end) {\n      endCallback && endCallback();\n      return;\n    }\n\n    var d = start + step > end ? end : start + step;\n\n    if (start > end) {\n      d = start - step < end ? end : start - step;\n    }\n\n    if (el === window) {\n      window.scrollTo(d, d);\n    } else {\n      el.scrollTop = d;\n    }\n\n    window.requestAnimationFrame(function () {\n      return scroll(d, end, step);\n    });\n  };\n\n  scroll(from, to, step);\n};\n/**\n * @param {*} list 现有标签导航列表\n * @param {*} newRoute 新添加的路由原信息对象\n * @description 如果该newRoute已经存在则不再添加\n */\n\nexport var getNewTagList = function getNewTagList(list, newRoute) {\n  var name = newRoute.name,\n      path = newRoute.path,\n      meta = newRoute.meta;\n\n  var newList = _toConsumableArray(list);\n\n  if (newList.findIndex(function (item) {\n    return item.name === name;\n  }) >= 0) return newList;else newList.push({\n    name: name,\n    path: path,\n    meta: meta\n  });\n  return newList;\n};\n/**\n * @param {Boolean} status 状态 1 => locked  0 => unlocked\n * @description 这里只是为了演示，实际应该将锁定状态的设置和获取用接口来实现\n */\n\nexport var setLockStatus = function setLockStatus(status) {\n  localStorage.isLocked = status;\n};\nexport var getLockStatus = function getLockStatus() {\n  return parseInt(localStorage.isLocked);\n};\n/**\n * @param {*} access 用户权限数组，如 ['super_admin', 'admin']\n * @param {*} route 路由列表\n */\n\nvar hasAccess = function hasAccess(access, route) {\n  if (route.meta && route.meta.access) return hasOneOf(access, route.meta.access);else return true;\n};\n/**\n * @param {*} name 即将跳转的路由name\n * @param {*} access 用户权限数组\n * @param {*} routes 路由列表\n * @description 用户是否可跳转到该页\n */\n\n\nexport var canTurnTo = function canTurnTo(name, access, routes) {\n  var getHasAccessRouteNames = function getHasAccessRouteNames(list) {\n    var res = [];\n    list.forEach(function (item) {\n      if (item.children && item.children.length) {\n        res = [].concat(res, getHasAccessRouteNames(item.children));\n      } else {\n        if (item.meta && item.meta.access) {\n          if (hasAccess(access, item)) res.push(item.name);\n        } else {\n          res.push(item.name);\n        }\n      }\n    });\n    return res;\n  };\n\n  var canTurnToNames = getHasAccessRouteNames(routes);\n  return canTurnToNames.indexOf(name) > -1;\n};\n/**\n * @param {String} url\n * @description 从URL中解析参数\n */\n\nexport var getParams = function getParams(url) {\n  var keyValueArr = url.split('?')[1].split('&');\n  var paramObj = {};\n  keyValueArr.forEach(function (item) {\n    var keyValue = item.split('=');\n    paramObj[keyValue[0]] = keyValue[1];\n  });\n  return paramObj;\n};\n/**\n * @param {Array} list 标签列表\n * @param {String} name 当前关闭的标签的name\n */\n\nexport var getNextName = function getNextName(list, name) {\n  var res = '';\n\n  if (list.length === 2) {\n    res = 'home';\n  } else {\n    if (list.findIndex(function (item) {\n      return item.name === name;\n    }) === list.length - 1) res = list[list.length - 2].name;else res = list[list.findIndex(function (item) {\n      return item.name === name;\n    }) + 1].name;\n  }\n\n  return res;\n};\n/**\n * 根据id获取obj的名称\n * @param obj 比较对象\n * @param value 比较值\n * @param key 比较key\n * @param getKey 要输出的key（不传默认为比较的key）\n */\n\nexport var getObjName = function getObjName(obj, value, key, getKey) {\n  if (!getKey) getKey = key;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = obj[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n\n      if (item[key] + '' === value + '') {\n        return item[getKey];\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};",{"version":3,"sources":["src\\libs\\util.js"],"names":["Cookies","config","forEach","hasOneOf","objEqual","title","cookieExpires","useI18n","TOKEN_KEY","setToken","token","set","expires","getToken","get","hasChild","item","children","length","showThisMenuEle","access","meta","printpage","divId","printHtml","document","getElementById","innerHTML","wind","window","open","body","print","printClassPage","name","getElementsByClassName","getMenuByRouter","list","res","hideInMenu","obj","icon","showAlways","href","push","getBreadCrumbList","route","homeRoute","homeItem","routeMetched","matched","some","filter","undefined","hideInBread","map","__titleIsFunction__","to","path","showTitle","vm","includes","replace","m","str","_","$t","trim","setTagNavListInLocalstorage","localStorage","tagNaveList","JSON","stringify","getTagNavListFromLocalstorage","parse","getHomeRoute","routers","homeName","i","len","getNextRoute","index","findIndex","routeEqual","routeHasExist","tagNavList","routeItem","doCustomTimes","route1","route2","params1","params","params2","query1","query","query2","times","callback","getRouteTitleHandled","router","setTitle","handledRoute","pageTitle","resTitle","localSave","key","value","setItem","localRead","getItem","findNodeUpperByClasses","ele","classes","parentNode","classList","every","contains","className","scrollTop","el","from","duration","endCallback","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","difference","Math","abs","step","ceil","scroll","start","end","d","scrollTo","getNewTagList","newRoute","newList","setLockStatus","status","isLocked","getLockStatus","parseInt","hasAccess","canTurnTo","routes","getHasAccessRouteNames","concat","canTurnToNames","indexOf","getParams","keyValueArr","url","split","paramObj","keyValue","getNextName","getObjName","getKey"],"mappings":"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","sourceRoot":"D:\\Vue_WorkSpace\\sg-Admin","sourcesContent":["import Cookies from 'js-cookie'\n// cookie保存的天数\nimport config from '@/config'\nimport { forEach, hasOneOf, objEqual } from '@/libs/tools'\nconst { title, cookieExpires, useI18n } = config\n\nexport const TOKEN_KEY = 'token_zhihuiminggong'\n\nexport const setToken = (token) => {\n  Cookies.set(TOKEN_KEY, token, {expires: cookieExpires || 1})\n}\n\nexport const getToken = () => {\n  const token = Cookies.get(TOKEN_KEY)\n  if (token) return token\n  else return false\n}\n\nexport const hasChild = (item) => {\n  return item.children && item.children.length !== 0\n}\n\nconst showThisMenuEle = (item, access) => {\n  if (item.meta && item.meta.access && item.meta.access.length) {\n    if (hasOneOf(item.meta.access, access)) return true\n    else return false\n  } else return true\n}\n\n/**\n * 打印方法\n * @param {String} divId 打印容器id\n */\nexport const printpage = (divId) => {\n  var printHtml = document.getElementById(divId).innerHTML\n\n  var wind = window.open('', 'newwindow', 'height=300, width=1000, top=100, left=300, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no')\n\n  wind.document.body.innerHTML = printHtml\n\n  wind.print()\n  return false\n}\n\n/**\n * 根据class名打印\n * @param { String } name  div的class名\n */\nexport const printClassPage = (name) => {\n  var printHtml = document.getElementsByClassName(name)[0].innerHTML + document.getElementsByClassName(name)[1].innerHTML\n\n  var wind = window.open('', 'newwindow', 'height=300, width=1000, top=100, left=300, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no')\n\n  wind.document.body.innerHTML = printHtml\n\n  wind.print()\n  return false\n}\n/**\n * @param {Array} list 通过路由列表得到菜单列表\n * @returns {Array}\n */\nexport const getMenuByRouter = (list, access) => {\n  let res = []\n  forEach(list, item => {\n    if (!item.meta || (item.meta && !item.meta.hideInMenu)) {\n      let obj = {\n        icon: (item.meta && item.meta.icon) || '',\n        name: item.name,\n        meta: item.meta\n      }\n      if ((hasChild(item) || (item.meta && item.meta.showAlways)) && showThisMenuEle(item, access)) {\n        obj.children = getMenuByRouter(item.children, access)\n      }\n      if (item.meta && item.meta.href) obj.href = item.meta.href\n      if (showThisMenuEle(item, access)) res.push(obj)\n    }\n  })\n  return res\n}\n\n/**\n * @param {Array} routeMetched 当前路由metched\n * @returns {Array}\n */\nexport const getBreadCrumbList = (route, homeRoute) => {\n  let homeItem = { ...homeRoute, icon: homeRoute.meta.icon }\n  let routeMetched = route.matched\n  if (routeMetched.some(item => item.name === homeRoute.name)) return [homeItem]\n  let res = routeMetched.filter(item => {\n    return item.meta === undefined || !item.meta.hideInBread\n  }).map(item => {\n    let meta = {...item.meta}\n    if (meta.title && typeof meta.title === 'function') {\n      meta.__titleIsFunction__ = true\n      meta.title = meta.title(route)\n    }\n    let obj = {\n      icon: (item.meta && item.meta.icon) || '',\n      name: item.name,\n      meta: meta\n    }\n    return obj\n  })\n  res = res.filter(item => {\n    return !item.meta.hideInMenu\n  })\n  return [{...homeItem, to: homeRoute.path}, ...res]\n}\n\nexport const showTitle = (item, vm) => {\n  let { title, __titleIsFunction__ } = item.meta\n  if (!title) return\n  if (useI18n) {\n    if (title.includes('{{') && title.includes('}}') && useI18n) title = title.replace(/({{[\\s\\S]+?}})/, (m, str) => str.replace(/{{([\\s\\S]*)}}/, (m, _) => vm.$t(_.trim())))\n    else if (__titleIsFunction__) title = item.meta.title\n    else title = vm.$t(item.name)\n  } else title = (item.meta && item.meta.title) || item.name\n  return title\n}\n\n/**\n * @description 本地存储和获取标签导航列表\n */\nexport const setTagNavListInLocalstorage = list => {\n  localStorage.tagNaveList = JSON.stringify(list)\n}\n/**\n * @returns {Array} 其中的每个元素只包含路由原信息中的name, path, meta三项\n */\nexport const getTagNavListFromLocalstorage = () => {\n  const list = localStorage.tagNaveList\n  return list ? JSON.parse(list) : []\n}\n\n/**\n * @param {Array} routers 路由列表数组\n * @description 用于找到路由列表中name为home的对象\n */\nexport const getHomeRoute = (routers, homeName = 'home') => {\n  let i = -1\n  let len = routers.length\n  let homeRoute = {}\n  while (++i < len) {\n    let item = routers[i]\n    if (item.children && item.children.length) {\n      let res = getHomeRoute(item.children, homeName)\n      if (res.name) return res\n    } else {\n      if (item.name === homeName) homeRoute = item\n    }\n  }\n  return homeRoute\n}\n\n/**\n * @param {Array} list 标签列表\n * @param {String} name 当前关闭的标签的name\n */\nexport const getNextRoute = (list, route) => {\n  let res = {}\n  if (list.length === 2) {\n    res = getHomeRoute(list)\n  } else {\n    const index = list.findIndex(item => routeEqual(item, route))\n    if (index === list.length - 1) res = list[list.length - 2]\n    else res = list[index + 1]\n  }\n  return res\n}\n/**\n * 判断打开的标签列表里是否已存在这个新添加的路由对象\n */\nexport const routeHasExist = (tagNavList, routeItem) => {\n  let len = tagNavList.length\n  let res = false\n  doCustomTimes(len, (index) => {\n    if (routeEqual(tagNavList[index], routeItem)) res = true\n  })\n  return res\n}\n\n/**\n * @description 根据name/params/query判断两个路由对象是否相等\n * @param {*} route1 路由对象\n * @param {*} route2 路由对象\n */\nexport const routeEqual = (route1, route2) => {\n  const params1 = route1.params || {}\n  const params2 = route2.params || {}\n  const query1 = route1.query || {}\n  const query2 = route2.query || {}\n  return (route1.name === route2.name) && objEqual(params1, params2) && objEqual(query1, query2)\n}\n\n/**\n * @param {Number} times 回调函数需要执行的次数\n * @param {Function} callback 回调函数\n */\nexport const doCustomTimes = (times, callback) => {\n  let i = -1\n  while (++i < times) {\n    callback(i)\n  }\n}\n\nexport const getRouteTitleHandled = (route) => {\n  let router = {...route}\n  let meta = {...route.meta}\n  let title = ''\n  if (meta.title) {\n    if (typeof meta.title === 'function') {\n      meta.__titleIsFunction__ = true\n      title = meta.title(router)\n    } else title = meta.title\n  }\n  meta.title = title\n  router.meta = meta\n  return router\n}\n\n/**\n * @description 根据当前跳转的路由设置显示在浏览器标签的title\n * @param {Object} routeItem 路由对象\n * @param {Object} vm Vue实例\n */\nexport const setTitle = (routeItem, vm) => {\n  const handledRoute = getRouteTitleHandled(routeItem)\n  const pageTitle = showTitle(handledRoute, vm)\n  const resTitle = pageTitle ? `${title} - ${pageTitle}` : title\n  window.document.title = resTitle\n}\n\nexport const localSave = (key, value) => {\n  localStorage.setItem(key, value)\n}\n\nexport const localRead = (key) => {\n  return localStorage.getItem(key) || ''\n}\n\nexport const findNodeUpperByClasses = (ele, classes) => {\n  let parentNode = ele.parentNode\n  if (parentNode) {\n    let classList = parentNode.classList\n    if (classList && classes.every(className => classList.contains(className))) {\n      return parentNode\n    } else {\n      return findNodeUpperByClasses(parentNode, classes)\n    }\n  }\n}\n\n// scrollTop animation\nexport const scrollTop = (el, from = 0, to, duration = 500, endCallback) => {\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = (\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function (callback) {\n        return window.setTimeout(callback, 1000 / 60)\n      }\n    )\n  }\n  const difference = Math.abs(from - to)\n  const step = Math.ceil(difference / duration * 50)\n\n  const scroll = (start, end, step) => {\n    if (start === end) {\n      endCallback && endCallback()\n      return\n    }\n\n    let d = (start + step > end) ? end : start + step\n    if (start > end) {\n      d = (start - step < end) ? end : start - step\n    }\n\n    if (el === window) {\n      window.scrollTo(d, d)\n    } else {\n      el.scrollTop = d\n    }\n    window.requestAnimationFrame(() => scroll(d, end, step))\n  }\n  scroll(from, to, step)\n}\n\n/**\n * @param {*} list 现有标签导航列表\n * @param {*} newRoute 新添加的路由原信息对象\n * @description 如果该newRoute已经存在则不再添加\n */\nexport const getNewTagList = (list, newRoute) => {\n  const { name, path, meta } = newRoute\n  let newList = [...list]\n  if (newList.findIndex(item => item.name === name) >= 0) return newList\n  else newList.push({ name, path, meta })\n  return newList\n}\n\n/**\n * @param {Boolean} status 状态 1 => locked  0 => unlocked\n * @description 这里只是为了演示，实际应该将锁定状态的设置和获取用接口来实现\n */\nexport const setLockStatus = (status) => {\n  localStorage.isLocked = status\n}\nexport const getLockStatus = () => {\n  return parseInt(localStorage.isLocked)\n}\n\n/**\n * @param {*} access 用户权限数组，如 ['super_admin', 'admin']\n * @param {*} route 路由列表\n */\nconst hasAccess = (access, route) => {\n  if (route.meta && route.meta.access) return hasOneOf(access, route.meta.access)\n  else return true\n}\n\n/**\n * @param {*} name 即将跳转的路由name\n * @param {*} access 用户权限数组\n * @param {*} routes 路由列表\n * @description 用户是否可跳转到该页\n */\nexport const canTurnTo = (name, access, routes) => {\n  const getHasAccessRouteNames = (list) => {\n    let res = []\n    list.forEach(item => {\n      if (item.children && item.children.length) {\n        res = [].concat(res, getHasAccessRouteNames(item.children))\n      } else {\n        if (item.meta && item.meta.access) {\n          if (hasAccess(access, item)) res.push(item.name)\n        } else {\n          res.push(item.name)\n        }\n      }\n    })\n    return res\n  }\n  const canTurnToNames = getHasAccessRouteNames(routes)\n  return canTurnToNames.indexOf(name) > -1\n}\n\n/**\n * @param {String} url\n * @description 从URL中解析参数\n */\nexport const getParams = url => {\n  const keyValueArr = url.split('?')[1].split('&')\n  let paramObj = {}\n  keyValueArr.forEach(item => {\n    const keyValue = item.split('=')\n    paramObj[keyValue[0]] = keyValue[1]\n  })\n  return paramObj\n}\n\n/**\n * @param {Array} list 标签列表\n * @param {String} name 当前关闭的标签的name\n */\nexport const getNextName = (list, name) => {\n  let res = ''\n  if (list.length === 2) {\n    res = 'home'\n  } else {\n    if (list.findIndex(item => item.name === name) === list.length - 1) res = list[list.length - 2].name\n    else res = list[list.findIndex(item => item.name === name) + 1].name\n  }\n  return res\n}\n/**\n * 根据id获取obj的名称\n * @param obj 比较对象\n * @param value 比较值\n * @param key 比较key\n * @param getKey 要输出的key（不传默认为比较的key）\n */\nexport const getObjName = (obj, value, key, getKey) => {\n  if (!getKey) getKey = key\n  for (let item of obj) {\n    if (item[key] + '' === value + '') {\n      return item[getKey]\n    }\n  }\n}\n"]}]}