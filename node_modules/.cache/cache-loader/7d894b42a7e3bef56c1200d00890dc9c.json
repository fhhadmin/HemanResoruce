{"remainingRequest":"D:\\Vue_WorkSpace\\hr-Admin\\HemanResoruce\\node_modules\\babel-loader\\lib\\index.js!D:\\Vue_WorkSpace\\hr-Admin\\HemanResoruce\\src\\router\\index.js","dependencies":[{"path":"D:\\Vue_WorkSpace\\hr-Admin\\HemanResoruce\\src\\router\\index.js","mtime":1552553607044},{"path":"D:\\Vue_WorkSpace\\hr-Admin\\HemanResoruce\\.babelrc","mtime":1551258011000},{"path":"D:\\Vue_WorkSpace\\hr-Admin\\HemanResoruce\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551930361523},{"path":"D:\\Vue_WorkSpace\\hr-Admin\\HemanResoruce\\node_modules\\babel-loader\\lib\\index.js","mtime":1526583314000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport routes from './routers';\nimport iView from 'iview';\nimport { getToken, canTurnTo, setTitle } from '@/libs/util';\nimport store from '@/store';\nVue.use(Router);\nvar router = new Router({\n  routes: routes // mode: 'history'\n\n});\nvar LOGIN_PAGE_NAME = 'login';\nrouter.beforeEach(function (to, from, next) {\n  iView.LoadingBar.start();\n  next();\n  var token = getToken();\n\n  if (!token && to.name !== LOGIN_PAGE_NAME) {\n    // 未登录且要跳转的页面不是登录页\n    next({\n      name: LOGIN_PAGE_NAME // 跳转到登录页\n\n    });\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\n    // 未登陆且要跳转的页面是登录页\n    next(); // 跳转\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\n    // 已登录且要跳转的页面是登录页\n    next({\n      name: 'home' // 跳转到home页\n\n    });\n  } else {\n    store.dispatch('getUserInfo').then(function (user) {\n      // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\n      user.access = store.state.user.access;\n      console.log(store.state.user.access);\n      if (canTurnTo(to.name, user.access, routes)) next(); // 有权限，可访问\n      else next({\n          replace: true,\n          name: 'error_401'\n        }); // 无权限，重定向到401页面\n    });\n  }\n});\nrouter.afterEach(function (to) {\n  setTitle(to, router.app);\n  iView.LoadingBar.finish();\n  window.scrollTo(0, 0);\n});\nexport default router;",{"version":3,"sources":["src\\router\\index.js"],"names":["Vue","Router","routes","iView","getToken","canTurnTo","setTitle","store","use","router","LOGIN_PAGE_NAME","beforeEach","to","from","next","LoadingBar","start","token","name","dispatch","then","user","access","state","console","log","replace","afterEach","app","finish","window","scrollTo"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,QAA7B,QAA4C,aAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEAP,IAAIQ,GAAJ,CAAQP,MAAR;AACA,IAAMQ,SAAS,IAAIR,MAAJ,CAAW;AACxBC,gBADwB,CAExB;;AAFwB,CAAX,CAAf;AAIA,IAAMQ,kBAAkB,OAAxB;AAEAD,OAAOE,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpCX,QAAMY,UAAN,CAAiBC,KAAjB;AACAF;AACA,MAAMG,QAAQb,UAAd;;AACA,MAAI,CAACa,KAAD,IAAUL,GAAGM,IAAH,KAAYR,eAA1B,EAA2C;AACzC;AACAI,SAAK;AACHI,YAAMR,eADH,CACmB;;AADnB,KAAL;AAGD,GALD,MAKO,IAAI,CAACO,KAAD,IAAUL,GAAGM,IAAH,KAAYR,eAA1B,EAA2C;AAChD;AACAI,WAFgD,CAEzC;AACR,GAHM,MAGA,IAAIG,SAASL,GAAGM,IAAH,KAAYR,eAAzB,EAA0C;AAC/C;AACAI,SAAK;AACHI,YAAM,MADH,CACU;;AADV,KAAL;AAGD,GALM,MAKA;AACLX,UAAMY,QAAN,CAAe,aAAf,EAA8BC,IAA9B,CAAmC,gBAAQ;AACzC;AACAC,WAAKC,MAAL,GAAcf,MAAMgB,KAAN,CAAYF,IAAZ,CAAiBC,MAA/B;AACAE,cAAQC,GAAR,CAAYlB,MAAMgB,KAAN,CAAYF,IAAZ,CAAiBC,MAA7B;AACA,UAAIjB,UAAUO,GAAGM,IAAb,EAAmBG,KAAKC,MAAxB,EAAgCpB,MAAhC,CAAJ,EAA6CY,OAA7C,CAAoD;AAApD,WACKA,KAAK;AAAEY,mBAAS,IAAX;AAAiBR,gBAAM;AAAvB,SAAL,EALoC,CAKO;AACjD,KAND;AAOD;AACF,CA1BD;AA4BAT,OAAOkB,SAAP,CAAiB,cAAM;AACrBrB,WAASM,EAAT,EAAaH,OAAOmB,GAApB;AACAzB,QAAMY,UAAN,CAAiBc,MAAjB;AACAC,SAAOC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,CAJD;AAMA,eAAetB,MAAf","sourceRoot":"D:\\Vue_WorkSpace\\hr-Admin\\HemanResoruce","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport routes from './routers'\nimport iView from 'iview'\nimport {getToken, canTurnTo, setTitle} from '@/libs/util'\nimport store from '@/store'\n\nVue.use(Router)\nconst router = new Router({\n  routes\n  // mode: 'history'\n})\nconst LOGIN_PAGE_NAME = 'login'\n\nrouter.beforeEach((to, from, next) => {\n  iView.LoadingBar.start()\n  next()\n  const token = getToken()\n  if (!token && to.name !== LOGIN_PAGE_NAME) {\n    // 未登录且要跳转的页面不是登录页\n    next({\n      name: LOGIN_PAGE_NAME // 跳转到登录页\n    })\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\n    // 未登陆且要跳转的页面是登录页\n    next() // 跳转\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\n    // 已登录且要跳转的页面是登录页\n    next({\n      name: 'home' // 跳转到home页\n    })\n  } else {\n    store.dispatch('getUserInfo').then(user => {\n      // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\n      user.access = store.state.user.access\n      console.log(store.state.user.access)\n      if (canTurnTo(to.name, user.access, routes)) next() // 有权限，可访问\n      else next({ replace: true, name: 'error_401' }) // 无权限，重定向到401页面\n    })\n  }\n})\n\nrouter.afterEach(to => {\n  setTitle(to, router.app)\n  iView.LoadingBar.finish()\n  window.scrollTo(0, 0)\n})\n\nexport default router\n"]}]}